class Solution {
   
   public void getcomb(int [] candidates ,int i,int t,List<Integer> cur, List<List<Integer>> res){

       if(t==0){
           res.add(new ArrayList<Integer>(cur));
           return;
       }
      if(i>=candidates.length|| t<0) return;
       for(int k=i;k<candidates.length;k++){
           cur.add(candidates[k]);
           getcomb(candidates,k,t-candidates[k],cur,res);
           cur.remove(cur.size()-1);      
       }
   }

    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        getcomb(candidates,0,target,new ArrayList<>(),res);
        return res;
    }
}
